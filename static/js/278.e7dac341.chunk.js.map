{"version":3,"file":"static/js/278.e7dac341.chunk.js","mappings":"6LA4CA,UAzCe,WAAO,IAAD,EACnB,GAA4BA,EAAAA,EAAAA,UAAS,CACnC,SAAU,SAAU,SAAU,SAAU,WAD1C,eAAOC,EAAP,KAAeC,EAAf,KAGAC,QAAQC,IAAIF,GACZ,IAAMG,GAAWC,EAAAA,EAAAA,MACjB,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAO,UAAGF,EAAaG,IAAI,kBAApB,QAAkC,GAe/CR,QAAQC,IAAIC,GAEZ,IAAMO,EAAgBX,EAAOY,QAAO,SAAAC,GAAK,OAAIA,EAAMC,SAASL,EAAnB,IAEzC,OAAO,4BACL,kBAAOM,KAAK,OACVC,MAAOP,EACPQ,SAjBsB,SAAAC,GACxB,IAAMC,EAAeD,EAAME,OAAOJ,MAClC,GAAqB,KAAjBG,EACF,OAAOX,EAAgB,CAAC,GAG1BA,EAAgB,CAAEC,QAASU,GAE5B,IAUER,EAAcU,KAAI,SAAAR,GACjB,OACE,SAAC,KAAD,CAAkBS,GAAE,UAAKT,GAASU,MAAO,CAAEC,KAAMpB,GAAjD,SACGS,GADQA,EAId,MAEJ,C","sources":["pages/Movies/Movies.jsx"],"sourcesContent":["import { useState } from \"react\";\nimport { Link, useLocation, useSearchParams } from \"react-router-dom\";\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([\n    'movie1', 'movie2', 'movie3', 'movie4', 'movie5'\n  ]);\n  console.log(setMovies)\n  const location = useLocation();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const movieId = searchParams.get('movieId') ?? \"\"\n  /*  useEffect(() => {\n      //HTTP запит, якщо потрібен   \n     }, [])   state isLoading error*/\n  \n  const updateQueryString = event => {\n    const movieIdValue = event.target.value;\n    if (movieIdValue === \"\") {\n      return setSearchParams({});\n    };\n    //якщо event.target.value \"\", то записуємо {} чистимо\n    setSearchParams({ movieId: movieIdValue })\n    //якщо event.target.value не \"\", то записуємо (movieId: event.target.value)\n  };\n\n  console.log(location)\n  \n  const visibleMovies = movies.filter(movie => movie.includes(movieId))\n  \n  return <div>\n    <input type=\"text\"\n      value={movieId}\n      onChange={updateQueryString} />\n    {visibleMovies.map(movie => {\n      return (\n        <Link key={movie} to={`${movie}`} state={{ from: location }}>\n          {movie}\n        </Link>\n      )\n    })}\n  </div>\n};\n\n\nexport default Movies;\n\n//setSearchParams не поновлює searchParam а перезаписує поверх"],"names":["useState","movies","setMovies","console","log","location","useLocation","useSearchParams","searchParams","setSearchParams","movieId","get","visibleMovies","filter","movie","includes","type","value","onChange","event","movieIdValue","target","map","to","state","from"],"sourceRoot":""}