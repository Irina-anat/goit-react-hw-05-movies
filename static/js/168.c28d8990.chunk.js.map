{"version":3,"file":"static/js/168.c28d8990.chunk.js","mappings":"+SAEAA,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAAhB,SAGeC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,6GAE2BF,EAAAA,EAAAA,IAAA,mCACOC,IAHlC,cAEUE,EAFV,yBAKWA,EAASC,KAAKC,SALzB,gCAOIC,QAAQC,MAAR,MAPJ,gF,SAaeC,EAAkB,GAAlBA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAAiCC,GAAjC,gGAE2BT,EAAAA,EAAAA,IAAA,+BACGC,EADH,kBACoBQ,EADpB,oBAF3B,cAEUN,EAFV,yBAKWA,EAASC,KAAKC,SALzB,gCAOIC,QAAQI,IAAR,MAPJ,gF,SAceC,EAAkB,GAAlBA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAAiCC,GAAjC,gGAE2BZ,EAAAA,EAAAA,IAAA,gBACZY,EADY,oBACEX,EADF,oBAF3B,cAEUE,EAFV,yBAKWA,EAASC,MALpB,gCAOIE,QAAQI,IAAR,MAPJ,gF,SAaeG,EAAe,GAAfA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA8BD,GAA9B,gGAE2BZ,EAAAA,EAAAA,IAAA,gBACZY,EADY,4BACUX,EADV,oBAF3B,cAEUE,EAFV,yBAKWA,EAASC,KAAKU,MALzB,gCAOIR,QAAQI,IAAR,MAPJ,gF,SAaeK,EAAkB,GAAlBA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAAiCH,GAAjC,gGAE2BZ,EAAAA,EAAAA,IAAA,gBACZY,EADY,4BACUX,EADV,oBAF3B,cAEUE,EAFV,yBAKWA,EAASC,KAAKC,SALzB,gCAOIC,QAAQI,IAAR,MAPJ,gF,sIC1DA,EAA+B,8BAA/B,EAA6E,+B,SCwC7E,EApCgB,WAEd,IAAQM,GAAYC,EAAAA,EAAAA,MAAZD,QAER,GAA4BE,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WAAM,wCAEd,8GAEyBN,EAAAA,EAAAA,IAAkBC,GAF3C,OAEUM,EAFV,OAGIF,EAAUE,GAHd,gDAKIhB,QAAQI,IAAR,MALJ,0DAFc,sBACTM,GADS,mCAUdO,EACD,GAAE,CAACP,KAII,8BACLG,EAAOK,OAAS,GACf,wBACGL,EAAOM,KAAI,gBAAGb,EAAH,EAAGA,GAAIc,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACV,gBAAIC,UAAWC,EAAf,UACGH,IAAU,gBAAIE,UAAWC,EAAf,qBAA2CH,KACrDC,IAAW,uBAAIA,MAFoBf,EAD5B,OAMX,sCAGR,C","sources":["Services/Api.js","webpack://goit-react-hw-05-movies/./src/components/Reviews/Reviews.module.css?7248","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = \"0846bf312f0a1b3f0d9b691dd26eb2d9\";\n\n\nasync function fetchTrendingMovies () {\n  try {\n    const response = await axios.get(\n      `trending/all/day?api_key=${API_KEY}`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\n//fetchSearchMovies().then(response =>console.log(response)) \n\nasync function fetchSearchMovies(query) {\n   try {\n    const response = await axios.get(\n      `search/movie?api_key=${API_KEY}&query=${query}&language=en-US`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n\n//fetchSearchMovies('king').then(response =>console.log(response)) \n\nasync function fetchMovieDetails(id) {\n   try {\n    const response = await axios.get(\n      `movie/${id}?api_key=${API_KEY}&language=en-US`\n    );\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n//fetchMovieDetails(113082).then(response =>console.log(response)) \n\nasync function fetchMovieCast(id) {\n   try {\n    const response = await axios.get(\n      `movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n    );\n    return response.data.cast;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n//fetchMovieCast(459003).then(response =>console.log(response)) \n\nasync function fetchMovieReviews(id) {\n   try {\n    const response = await axios.get(\n      `movie/${id}/reviews?api_key=${API_KEY}&language=en-US`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n//fetchMovieReviews(447365).then(response =>console.log(response)) \n\n\nexport { fetchTrendingMovies, fetchSearchMovies, fetchMovieDetails, fetchMovieCast, fetchMovieReviews };\n\n\n\n\n\n/*async function getUser() {\n  try {\n    const response = await axios.get('/user?ID=12345');\n    console.log(response);\n  } catch (error) {\n    console.error(error);\n  }\n}*/\n\n\n\n\n\n\n\n/*/*const options = {\n    method: 'GET',\n    headers: {\n        accept: 'application/json',\n        Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIwODQ2YmYzMTJmMGExYjNmMGQ5YjY5MWRkMjZlYjJkOSIsInN1YiI6IjY0YTE1NjU2ODFkYTM5MDEwYjhiN2ZkZSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.Fu4JWQK_iKfB2CFB3482KCb1ZQWN0GnpevA4-rrxWVk',\n    },\n};\n     \nasync function fetchTrendingMovies() {\n    const response = await axios.get('/trending/all/day?language=en-US', options);\n    console.log(response.data.results)\n    return response.data.results;\n}*/","// extracted by mini-css-extract-plugin\nexport default {\"review__item\":\"Reviews_review__item__+NfiP\",\"review__title\":\"Reviews_review__title__Gk9N1\"};","import { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\"\nimport { fetchMovieReviews } from \"Services/Api\";\nimport css from './Reviews.module.css';\n\nconst Reviews = () => {\n  //щоб отримати динамічні параметри з url\n  const { movieId } = useParams();\n  //console.log(movieId)\n  const [review, setReview] = useState([]);\n    \n  useEffect(() => {\n    if (!movieId) return;\n    async function fetchReview() {\n      try {\n        const Review = await fetchMovieReviews(movieId);\n        setReview(Review);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    fetchReview();\n  }, [movieId]);\n\n  //console.log(review)\n    \n  return (<>\n    {review.length > 0 ? (\n      <ul>\n        {review.map(({ id, author, content }) =>\n          <li className={css.review__item} key={id}>\n            {author && <h3 className={css.review__title}>Author: {author}</h3>}\n            {content && <p>{content}</p>}\n          </li>)}\n      </ul>\n    ) : (<p>No review</p>)}\n  </>\n  )\n};\n\n\nexport default Reviews;\n\n\n\n\n/* const Reviews = () => {\n  //щоб отримати динамічні параметри з url\n  const { movieId } = useParams()\n    \n useEffect(() => {\n//HTTP запит, якщо потрібен   \n}, [])\n    \n  return <div>інформація про огляди: {movieId}</div>\n};*/"],"names":["axios","API_KEY","fetchTrendingMovies","response","data","results","console","error","fetchSearchMovies","query","log","fetchMovieDetails","id","fetchMovieCast","cast","fetchMovieReviews","movieId","useParams","useState","review","setReview","useEffect","Review","fetchReview","length","map","author","content","className","css"],"sourceRoot":""}